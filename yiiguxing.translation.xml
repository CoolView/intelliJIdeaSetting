<application>
  <component name="AppStorage">
    <histories>
      <item value="Comma expression" />
      <item value="relative" />
      <item value="Populate the JavaBeans properties of the specified bean, based on * the specified name/value pairs." />
      <item value="token MONKEYS_AT_AT" />
      <item value="expect TILDE, actual TILDE hsname" />
      <item value="Batch" />
      <item value="ceil" />
      <item value="origin" />
      <item value="Returns the smallest (closest to negative infinity) * {@code double} value that is greater than or equal to the * argument and is equal to a mathematical integer. Special cases: * &lt;ul&gt;&lt;li&gt;If the argument value is already equal to a * mathematical integer, then the result is the same as the * argument. &lt;li&gt;If the argument is NaN or an infinity or * positive zero or negative zero, then the result is the same as * the argument. &lt;li&gt;If the argument value is less than zero but * greater than -1.0, then the result is negative zero.&lt;/ul&gt; Note * that the value of {@code Math.ceil(x)} is exactly the * value of {@code -Math.floor(-x)}." />
      <item value="/** * Class String is special cased within the Serialization Stream Protocol. * * A String instance is written into an ObjectOutputStream according to * &lt;a href=&quot;{@docRoot}/../platform/serialization/spec/output.html&quot;&gt; * Object Serialization Specification, Section 6.2, &quot;Stream Elements&quot;&lt;/a&gt; */" />
      <item value="return false;" />
      <item value="Returns the address of the local host. This is achieved by retrieving * the name of the host from the system, then resolving that name into * an {@code InetAddress}. * * &lt;P&gt;Note: The resolved address may be cached for a short period of time. * &lt;/P&gt; * * &lt;p&gt;If there is a security manager, its * {@code checkConnect} method is called * with the local host name and {@code -1} * as its arguments to see if the operation is allowed. * If the operation is not allowed, an InetAddress representing * the loopback address is returned." />
      <item value="ERROR: value too long for type character varying(30)" />
      <item value="value too long for type character varying(20)" />
      <item value="sensitive" />
      <item value="Cache Hit Ratio" />
      <item value="was not registered for synchronization because synchronization is not active" />
      <item value="Approximate total number of rows" />
      <item value="margin" />
      <item value="attempted to return null from a method with a primitive return type (int)" />
      <item value="async" />
      <item value="declare" />
      <item value="decode" />
      <item value="Fills in any unset fields in the calendar fields. First, the {@link * #computeTime()} method is called if the time value (millisecond offset * from the &lt;a href=&quot;#Epoch&quot;&gt;Epoch&lt;/a&gt;) has not been calculated from * calendar field values. Then, the {@link #computeFields()} method is * called to calculate all calendar field values." />
      <item value="Indicates whether this bean is to be lazily initialized. If &quot;false&quot;, it will be instantiated on startup by bean factories that perform eager initialization of singletons. The effective default is &quot;false&quot;. Note: This attribute will not be inherited by child bean definitions. Hence, it needs to be specified per concrete bean definition. It can be shared through the 'default-lazy-init' attribute at the 'beans' level and potentially inherited from outer 'beans' defaults in case of nested 'beans' sections (e.g. with different profiles)." />
      <item value="favor" />
      <item value="&lt;p&gt;&lt;b&gt;For advanced needs, consider using a {@link DefaultListableBeanFactory} with * an {@link XmlBeanDefinitionReader}.&lt;/b&gt; The latter allows for reading from multiple XML * resources and is highly configurable in its actual XML parsing behavior." />
      <item value="Check whether the bean with the given name matches the specified type. * More specifically, check whether a {@link #getBean} call for the given name * would return an object that is assignable to the specified target type. * &lt;p&gt;Translates aliases back to the corresponding canonical bean name. * Will ask the parent factory if the bean cannot be found in this factory instance." />
      <item value="The fully qualified name of the bean's class, except if it serves only as a parent definition for child bean definitions." />
      <item value="Enables/disables merging for collections when using parent/child beans." />
      <item value="If addToConfig is false the mapper will not be added to MyBatis. This means * it must have been included in mybatis-config.xml. * &lt;p/&gt; * If it is true, the mapper will be added to MyBatis in the case it is not already * registered. * &lt;p/&gt; * By default addToCofig is true." />
      <item value="this.m jtf Person Search Name.get Text()" />
      <item value="Specify the number of times this trigger is supposed to fire. * &lt;p&gt;Default is to repeat indefinitely." />
      <item value="Note that explicit dependencies, i.e. &quot;property&quot; and &quot;constructor-arg&quot; elements, always override autowiring. Note: This attribute will not be inherited by child bean definitions. Hence, it needs to be specified per concrete bean definition." />
      <item value="Controls whether bean properties are &quot;autowired&quot;. This is an automagical process in which bean references don't need to be coded explicitly in the XML bean definition file, but rather the Spring container works out dependencies." />
      <item value="Note that this default mode also allows for annotation-driven autowiring, if activated. &quot;no&quot; refers to externally driven autowiring only, not affecting any autowiring demands that the bean class itself expresses." />
      <item value="The traditional Spring default. No automagical wiring. Bean references must be defined in the XML file via the &lt;ref/&gt; element (or &quot;ref&quot; attribute). We recommend this in most cases as it makes documentation more explicit." />
      <item value="Indicates whether or not this bean is to be lazily initialized. If false, it will be instantiated on startup by bean factories that perform eager initialization of singletons. The default is &quot;false&quot;." />
      <item value="Set the start delay in milliseconds. * &lt;p&gt;The start delay is added to the current system time (when the bean starts) * to control the start time of the trigger." />
      <item value="Specify the number of times this trigger is supposed to fire." />
      <item value="REQUEST" />
      <item value="as of Spring 3.2, in favor of" />
      <item value="in favor of" />
      <item value="replacing any previously registered Converter." />
      <item value="Register a custom {@link Converter} for the specified destination * &lt;code&gt;Class&lt;/code&gt;, replacing any previously registered Converter." />
      <item value="This implementation first hashes the {@code token}'s credentials, potentially using a * {@code salt} if the {@code info} argument is a * {@link org.apache.shiro.authc.SaltedAuthenticationInfo SaltedAuthenticationInfo}. It then compares the hash * against the {@code AuthenticationInfo}'s" />
      <item value="The bin count threshold for using a tree rather than list for a * bin. Bins are converted to trees when adding an element to a * bin with at least this many nodes. The value must be greater * than 2 and should be at least 8 to mesh with assumptions in * tree removal about conversion back to plain bins upon * shrinkage." />
      <item value="Adds a new entry with the specified key, value and hash code to * the specified bucket. It is the responsibility of this * method to resize the table if appropriate. * * Subclass overrides this to alter the behavior of put method." />
      <item value="The resulting string may vary depending on the platform's * default encoding. Instead, use the encode(String,String) * method to specify the encoding." />
      <item value="Returns a finalizer object if the FIS needs a finalizer; otherwise null. * If the FIS has a close method; it needs an AltFinalizer." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="114" />
        <entry key="ENGLISH" value="114" />
        <entry key="SPANISH" value="2" />
      </map>
    </option>
  </component>
</application>